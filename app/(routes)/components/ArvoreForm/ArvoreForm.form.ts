import { z } from "zod";

export const formSchema = z.object({
  _id: z.string().optional(),
  Data: z.string().optional(),
  Dicofre: z.string().optional(),
  Localizacao: z.string(),
  Especie: z.string(),
  Nomecomum: z.string(),
  Estado_fit: z.string(),
  Esdado_cal: z.string(),
  Ava_Risco: z.string(),
  Propo_Inte: z.string(),
  Obser: z.string(),
  GlobalID: z.string().optional(),
  raz_calssifica: z.string(),
  agen_bioticos: z.string(),
  Orgaos_afetados: z.string(),
  Grau_de_desfolha: z.string(),
  Sintomas_sinais_desfolhadores: z.string(),
  Grau_de_descoloracao_da_copa: z.string(),
  Deformacao_dos_tecidos: z.string(),
  Alteracao_da_estrutura: z.string(),
  Supressao_parcial_dos_orgaos: z.string(),
  Orificios_perfuracoes: z.string(),
  galerias: z.string(),
  necroses: z.string(),
  serrim: z.string(),
  exsudacao: z.string(),
  novelos_fibra: z.string(),
  Forma_caldeira: z.string(),
  Altura_v2: z.string().refine((val) => !Number.isNaN(parseInt(val, 10)), {
    message: "Expected number, received a string",
  }),
  capv2: z.number().optional(),
  DAP_v2: z.string().refine((val) => !Number.isNaN(parseInt(val, 10)), {
    message: "Expected number, received a string",
  }),
  idade_apro_v2: z.string(),
  Especie_Val: z.string().optional(),
  Outro_Nome_Comum: z.string().optional(),
  Outra_Especie: z.string().optional(),
  Codigo: z.string().optional(),
  Outra_Tip_Int: z.string().optional(),
  grupos: z.string().optional(),
  POINT_X_G: z.string().refine((value) => value !== "0", {
    message: "Coordenada X não pode ser 0",
  }),
  POINT_Y_G: z.string().refine((value) => value !== "0", {
    message: "Coordenada Y não pode ser 0",
  }),
  POINT_Z: z.string().optional(),
  Fotos: z.array(z.string()).optional(),
  createdAt: z.string().optional(),
  updatedAt: z.string().optional(),
});
